{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","None","sortType","setSortType","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","ByABC","localeCompare","ByLength","length","reverse","getPreparedGoods","className","onClick","type","cn","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,QAAAA,E,YAAAA,E,mBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEMC,EAhCR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,UAENI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,MACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,SACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAcQ,UAGTR,EAOcS,CACnBnB,EAAiB,CAAEI,WAAUE,cAY/B,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMhB,EAAYN,EAASe,QACpCQ,KAAK,SACLF,UAAWG,IACT,SAAU,UAAW,CACnB,WAAYnB,IAAaL,EAASe,QALxC,iCAYA,wBACEO,QAAS,kBAAMhB,EAAYN,EAASiB,WACpCM,KAAK,SACLF,UAAWG,IACT,SAAU,aAAc,CACtB,WAAYnB,IAAaL,EAASiB,WALxC,4BAYA,wBACEK,QArCQ,WACdd,GAAcD,IAqCRgB,KAAK,SACLF,UAAWG,IACT,SAAU,aAAc,CACtB,YAAajB,IALnB,sBAYEF,GAAYE,IACZ,wBACEe,QA9CI,WACZhB,EAAYN,EAASI,MACrBI,GAAa,IA6CLe,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGZ,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC3HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d4947f4f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  None = '',\n  ByABC = 'abc',\n  ByLength = 'length',\n}\n\ninterface SortParams {\n  sortType: SortType;\n  isReverse: boolean;\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortType, isReverse }: SortParams,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ByABC:\n          return good1.localeCompare(good2);\n\n        case SortType.ByLength:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.None);\n  const [isReverse, setIsReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortType, isReverse },\n  );\n\n  const reverse = () => {\n    setIsReverse(!isReverse);\n  };\n\n  const reset = () => {\n    setSortType(SortType.None);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SortType.ByABC)}\n          type=\"button\"\n          className={cn(\n            'button', 'is-info', {\n              'is-light': sortType !== SortType.ByABC,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SortType.ByLength)}\n          type=\"button\"\n          className={cn(\n            'button', 'is-success', {\n              'is-light': sortType !== SortType.ByLength,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={cn(\n            'button', 'is-warning', {\n              'is-light': !isReverse,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReverse) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(item => (\n          <li key={item} data-cy=\"Good\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}